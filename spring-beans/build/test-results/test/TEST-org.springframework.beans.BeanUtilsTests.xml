<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.beans.BeanUtilsTests" tests="84" skipped="0" failures="0" errors="0" timestamp="2019-12-09T02:19:16" hostname="DESKTOP-246NTI5" time="1.781">
  <properties/>
  <testcase name="isNotSimpleProperty(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="1.431"/>
  <testcase name="isNotSimpleProperty(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleProperty(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isNotSimpleProperty(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[6]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[7]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[8]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[9]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[10]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[11]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleValueType(Class)[12]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[13]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[14]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[15]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[16]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[17]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[18]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[19]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[20]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[21]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[22]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[23]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleValueType(Class)[24]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="testInstantiateClassGivenInterface()" classname="org.springframework.beans.BeanUtilsTests" time="0.01"/>
  <testcase name="testInstantiateClassWithOptionalNullableType()" classname="org.springframework.beans.BeanUtilsTests" time="0.014"/>
  <testcase name="testInstantiateClassWithOptionalPrimitiveType()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="isNotSimpleValueType(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isNotSimpleValueType(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testCopyPropertiesWithDifferentTypes1()" classname="org.springframework.beans.BeanUtilsTests" time="0.161"/>
  <testcase name="testCopyPropertiesWithDifferentTypes2()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testResolveSignatureWithArray()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[1]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[2]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[3]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[4]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[5]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[6]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[7]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[8]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[9]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[10]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[11]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[12]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[13]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[14]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[15]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[16]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[17]" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="isSimpleProperty(Class)[18]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[19]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[20]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[21]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[22]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[23]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[24]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[25]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[26]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[27]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="isSimpleProperty(Class)[28]" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testCopyPropertiesWithEditable()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testResolveInvalidSignatureStartParen()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testFindEditorByConvention()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="testResolveSimpleSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testResolveWithAndWithoutArgList()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testCopyPropertiesWithIgnore()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="testInstantiateClassGivenClassWithoutDefaultConstructor()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testResolveInvalidSignatureEndParen()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testCopyPropertiesWithIgnoredNonExistingProperty()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="testCopyPropertiesWithInvalidProperty()" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <testcase name="testResolveTypedSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testSPR6063()" classname="org.springframework.beans.BeanUtilsTests" time="0.003"/>
  <testcase name="testGetPropertyDescriptors()" classname="org.springframework.beans.BeanUtilsTests" time="0.012"/>
  <testcase name="testResolveOverloadedSignature()" classname="org.springframework.beans.BeanUtilsTests" time="0.0"/>
  <testcase name="testCopyProperties()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="testInstantiateClassWithMoreArgsThanParameters()" classname="org.springframework.beans.BeanUtilsTests" time="0.001"/>
  <testcase name="testBeanPropertyIsArray()" classname="org.springframework.beans.BeanUtilsTests" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
